@{
	ViewData["Title"] = "";
	ViewData["HideFooter"] = true;
}

<div class="container">
	<h1 class="my-4 text-center" style="padding-top:80px; color:floralwhite">@ViewData["Title"]</h1>

	<div class="row">
		<!-- SENSOR 1 -->
		<div class="col-md-6 d-flex justify-content-center">
			<div class="card mb-3 p-4" style="width: 100%; max-width: 400px;">
				<h4 class="text-center mb-4">Gaia</h4>

				<div class="d-flex justify-content-around align-items-center flex-wrap gap-4">
					<!-- Umidade -->
					<div id="humidityProgress" class="progress-ring">
						<div class="progress-inner">
							<span id="humidityValue">--%</span>
							<small>Umidade</small>
						</div>
					</div>

					<!-- Termômetro -->
					<div class="thermometer-container">
						<div class="thermometer-structure">
							<div class="column-empty"></div>
							<div class="bulb-empty"></div>
						</div>

						<div class="thermometer-filled">
							<div class="column-filled">
								<div class="gradient">
									<div class="level" id="temperatureLevel"></div>
								</div>
							</div>
							<div class="bulb-filled">
								<div class="base-color" id="temperatureBase"></div>
							</div>
						</div>
						<div class="temperature-label">
							<span id="temperatureValue">--°C</span>
							<small>Temperatura</small>
						</div>
					</div>

					<!-- Botão Regar -->
					<div class="text-center mt-4 w-100">
						<button class="btn-water">Regar</button>
					</div>
				</div>
			</div>
		</div>

		<!-- SENSOR 2 -->
		<div class="col-md-6 d-flex justify-content-center">
			<div class="card mb-3 p-4" style="width: 100%; max-width: 400px;">
				<h4 class="text-center mb-4">Sensor 2</h4>

				<div class="d-flex justify-content-around align-items-center flex-wrap gap-4">
					<!-- Umidade -->
					<div id="humidityProgress2" class="progress-ring" style="--value: 60; --color: #4b9856;">
						<div class="progress-inner">
							<span id="humidityValue2">60%</span>
							<small>Umidade</small>
						</div>
					</div>

					<!-- Termômetro -->
					<div class="thermometer-container">
						<div class="thermometer-structure">
							<div class="column-empty"></div>
							<div class="bulb-empty"></div>
						</div>

						<div class="thermometer-filled">
							<div class="column-filled">
								<div class="gradient">
									<div class="level" style="height: 90px;"></div>
								</div>
							</div>
							<div class="bulb-filled">
								<div class="base-color"></div>
							</div>
						</div>
						<div class="temperature-label">
							<span>25°C</span>
							<small>Temperatura</small>
						</div>
					</div>

					<!-- Botão Regar -->
					<div class="text-center mt-4 w-100">
						<button class="btn-water">Regar</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<style>
	body {
		background-image: url(/Images/sensors/solo.png);
		padding-top: 40px;
		background-size: cover;
		background-repeat: no-repeat;
		background-position: center center;
		background-attachment: fixed;
		image-rendering: auto;
	}

	.progress-ring {
		--size: 180px;
		--thickness: 18px;
		position: relative;
		width: var(--size);
		height: var(--size);
		border-radius: 50%;
		background: conic-gradient(var(--color) calc(var(--value) * 1%), #e0e0e0 0%);
		display: flex;
		align-items: center;
		justify-content: center;
	}

		.progress-ring::before,
		.progress-ring::after {
			content: '';
			position: absolute;
			width: var(--thickness);
			height: var(--thickness);
			background-color: var(--color);
			border-radius: 50%;
		}

		.progress-ring::before {
			top: calc(var(--thickness) / 360);
			left: 50%;
			transform: translateX(-50%);
			z-index: 2;
		}

		.progress-ring::after {
			transform: rotate(calc(var(--value) * 3.6deg)) translateY(calc(-1 * var(--size) / 2 + var(--thickness) / 2));
			transform-origin: center center;
		}

	.progress-inner {
		background-color: floralwhite;
		width: calc(var(--size) - var(--thickness) * 2);
		height: calc(var(--size) - var(--thickness) * 2);
		border-radius: 50%;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		font-weight: bold;
		font-size: 1.3em;
		color: #333;
		box-shadow: inset 0 0 5px #ddd;
		z-index: 3;
	}

		.progress-inner small {
			font-size: 0.8em;
			font-weight: normal;
			color: #555;
			margin-top: 5px;
		}

	.card {
		display: flex;
		color: floralwhite;
		border-radius: 20px;
		box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
		border: 2px solid #ddd;
		background: rgba(0, 0, 0, 0.5);
		transition: transform 0.3s ease, box-shadow 0.3s ease;
	}

	.btn-water {
		background-color: #4b9856;
		color: white;
		border: none;
		padding: 12px 24px;
		font-size: 1rem;
		font-weight: bold;
		border-radius: 12px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
		cursor: pointer;
		transition: background-color 0.3s ease, transform 0.2s ease;
	}

		.btn-water:hover {
			background-color: #3c7c45;
			transform: scale(1.05);
		}

	.thermometer-container {
		position: relative;
		width: 100px;
		display: flex;
		flex-direction: column;
		align-items: center;
		padding-bottom: 30px;
		margin-top: 60px;
	}

	.thermometer-structure {
		position: absolute;
		top: 0;
		left: 50%;
		transform: translateX(-50%);
		z-index: 0;
		display: flex;
		flex-direction: column;
		align-items: center;
		pointer-events: none;
	}

	.column-empty {
		width: 24px;
		height: 120px;
		border: 8px solid #ccc;
		border-bottom: none;
		border-top-left-radius: 10px;
		border-top-right-radius: 10px;
		background-color: transparent;
	}

	.bulb-empty {
		width: 48px;
		height: 48px;
		border-radius: 50%;
		border: 8px solid #ccc;
		background-color: transparent;
		margin-top: -10px;
	}

	.thermometer-filled {
		z-index: 1;
		display: flex;
		flex-direction: column;
		align-items: center;
		position: relative;
	}

	.column-filled {
		width: 15px;
		height: 120px;
		overflow: hidden;
		display: flex;
		align-items: baseline;
		border-top-left-radius: 10px;
		border-top-right-radius: 10px;
	}

	.bulb-filled {
		width: 36px;
		height: 36px;
		border-radius: 50%;
		background-color: #1f3f70;
		position: absolute;
		bottom: -32px;
		left: 50%;
		transform: translateX(-50%);
		display: flex;
		align-items: center;
		justify-content: center;
		overflow: hidden;
		z-index: 7;
	}

	.gradient {
		width: 100%;
		height: 100%;
		background: linear-gradient(to bottom, #d42020 0%, #ff7b00 30%, #87ceeb 60%, #0c255a 100%);
		position: relative;
		border-top-left-radius: 10px;
		border-top-right-radius: 10px;
		margin-top: 4px;
	}

	.level {
		position: absolute;
		top: 0;
		width: 100%;
		height: 50%;
		background-color: floralwhite;
		border-top-left-radius: 15px;
		border-top-right-radius: 15px;
		margin-top: -0.13px;
	}

	.base-color {
		width: 100%;
		height: 100%;
		background-color: #1f3f70;
	}

	.temperature-label {
		text-align: center;
		margin-top: 45px;
		position: relative;
		z-index: 10;
	}
</style>

<!-- Firebase Script -->
<script type="module">
	import { initializeApp } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-app.js";
	import { getDatabase, ref, onValue } from "https://www.gstatic.com/firebasejs/11.4.0/firebase-database.js";

	const firebaseConfig = {
		apiKey: "AIzaSyD26u7lIJNdK_7KlfzDdftbINE-eqm4b9M",
		authDomain: "wsplant-59c38.firebaseapp.com",
		databaseURL: "https://wsplant-59c38-default-rtdb.firebaseio.com",
		projectId: "wsplant-59c38",
		storageBucket: "wsplant-59c38.appspot.com",
		messagingSenderId: "237024281074",
		appId: "1:237024281074:web:4c56c76f6108398012eb6b",
		measurementId: "G-L9PXPZJDQL"
	};

	const app = initializeApp(firebaseConfig);
	const db = getDatabase(app);

	const humidityRef = ref(db, 'sensor/umidade');
	const temperatureRef = ref(db, 'sensor/temperatura');

	onValue(humidityRef, (snapshot) => {
		const value = snapshot.val()?.valor ?? 0;
		document.getElementById('humidityValue').innerText = `${value}%`;
		updateProgress('humidityProgress', value);
	});

	onValue(temperatureRef, (snapshot) => {
		const value = snapshot.val()?.valor ?? 0;
		document.getElementById('temperatureValue').innerText = `${value}°C`;
		updateTemperatureLevel(value);
	});

	function updateProgress(elementId, value) {
		const progress = document.getElementById(elementId);

		let color = "#4b9856";
		if (value <= 14) color = "#e9332b";
		else if (value <= 34) color = "#ee642a";
		else if (value <= 49) color = "#f4951d";
		else if (value <= 64) color = "#bdc82c";
		else if (value <= 74) color = "#7db23f";

		progress.style.background = `conic-gradient(${color} ${value * 3.6}deg, #e0e0e0 0deg)`;
		progress.style.setProperty('--value', value);
		progress.style.setProperty('--color', color);
	}

	function updateTemperatureLevel(value) {
		const level = document.getElementById("temperatureLevel");
		const maxHeight = 160;
		const maxTemp = 100;

		let percent = Math.min(Math.max(value, 0), maxTemp) / maxTemp;
		let emptyHeight = maxHeight * (1 - percent);

		level.style.height = `${emptyHeight}px`;
		document.getElementById("temperatureValue").innerText = `${value}°C`;
	}
</script>
